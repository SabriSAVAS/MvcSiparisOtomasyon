

@using PagedList.Mvc
@model SiparisEnt.Dto.CatalogVM.ProductPopupModel
<table class="table table-bordered table-condensed">
    <thead>
        <tr>
            <th class="center">Ürün ID</th>
            <th>Ürüm Kodu</th>
            <th>Ürün İsmi</th>
            <th>Ürün Fiyatı</th>
            <th>İşlemler</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.ProductListPopups != null && Model.ProductListPopups.Count != 0)
        {
            foreach (var product in Model.ProductListPopups)
            {
                <tr class="center">
                    <td>
                        <label id="productId_@product.Id" data-id="@product.Id">
                            @product.Id
                        </label>
                    </td>
                    <td>
                        <label id="productcode_@product.Id" data-id="@product.ProductCode">
                            @product.ProductCode
                        </label>
                    </td>
                    <td>
                        <label id="productname_@product.Id" data-id="@product.ProductName">
                            @product.ProductName
                        </label>
                    </td>
                    <td>
                        <label id="productname_@product.Id" data-id="@product.ProductName">
                            @product.Price
                        </label>
                    </td>
                    <td class="center">
                        <a href="javascript:productselect(@product.Id)" class="btn btn-sm btn-default">
                            <i class="glyphicon glyphicon-ok"></i>
                        </a>
                    </td>
                </tr>
            }

        }
        else
        {
            <tr>
                <td class="center" colspan="4"><h4>Kayıtlı Ürün Bulunmadı !</h4></td>
            </tr>
        }

    </tbody>
</table>

<div class="pull-right btn-group btn-corner" style="padding-right:5px">
    @Html.PagedListPager(Model.ProductListPopups, page => Url.Action("ProductPopup", new RouteValueDictionary
{
{"Page",page},
{"ProductCode",Model.ProductCode},
{"ProductName",Model.ProductName}
}), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions { UpdateTargetId = "productlistpopup" }))


</div>
